<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Solr 6.5.1集群部署和后台管理]]></title>
      <url>/2016-12-05/Solr6.5.1%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2%E5%92%8C%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<pre><code>两年前用过solr5.1版本的，当时只是简单入个门，拿来在项目里建个全文索引，然后再query，其他什么也没做，还是傻傻地自己去配Tomcat，这次做毕设因为需求而重拾solr，基于作死折腾的原则，肯定要用最新版的啦~，然后。。。还是很顺利踩到坑了，schema相关配置变了。。。配置变了。。。置变了。。。变了。。。了。。。不过还是很快解决了，当然这次打算把集群高可用相关也折腾折腾、还有和mysql之间的配合和索引同步，所以新写一篇看起来不那么low的博客出来（之前写过一篇弱文。。。）
</code></pre><h2 id="下载和初始化启动"><a href="#下载和初始化启动" class="headerlink" title="下载和初始化启动"></a>下载和初始化启动</h2><p><strong>官网下载6.5.1版本的solr，解压</strong></p>
<h5 id="目录说明："><a href="#目录说明：" class="headerlink" title="目录说明："></a>目录说明：</h5><ul>
<li>bin：启动脚本</li>
<li>contrib：第三方贡献拓展jar包，包括一些第三方分词器</li>
<li>dist：一些最终生成的jar包，主要是solrj客户端jar包</li>
<li>docs：文档</li>
<li>example：一些样例，example-DIH目录下的是一些solr索引core样例</li>
<li>server：solr服务端工作目录，自带集成jetty插件方式启动solr服务器</li>
<li><ul>
<li>solr：solr搜索引擎工作目录，即solr/home</li>
</ul>
</li>
<li><ul>
<li>solr-webapp：solr后台管理页面webapp</li>
</ul>
</li>
<li><ul>
<li>start.jar：服务端启动jar包</li>
</ul>
</li>
</ul>
<h5 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h5><ol>
<li>contrib/analysis-extras/lucene-libs：这个目录下是第三方分词器jar，将其拷贝到server/solr-webapp/webapp/WEB-INF/lib下供webapp使用</li>
<li><p>dist/solrj-lib：这里是solrj客户端的依赖jar包，使用maven的话用如下坐标即可</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.solr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>solr-solrj<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>example/example-DIH/solr：该目录下自带了初始的五个索引库core，将其拷贝到server/solr目录下，solr服务端启动才会自动引入core到系统中（solr.xml不要复制）</p>
</li>
<li>server/solr：步骤3拷贝过来的五个core中有conf一系列配置文件可以配置这个core相关参数，后面专门细讲</li>
</ol>
<h5 id="索引库core配置"><a href="#索引库core配置" class="headerlink" title="索引库core配置"></a>索引库core配置</h5><p>到配置好的server/solr目录下，找到db目录为例，db/conf目录下一堆的配置文件，主要配置的为如下：</p>
<ul>
<li>db/lib：存放该core需要的额外jar，比如第三方分词器，在该目录下的分词器中的类可以在schema配置时直接全限定类名引入</li>
<li>db/conf/managed-schema：schema配置文件，该文件为系统REST API配置时系统的合成文件，不建议手动修改</li>
<li>db/conf/schema.xml：我自己把managed-schema复制一份重命名的，用于手动配置schema</li>
<li>db/conf/solrconfig.xml：该core的总配置文件</li>
</ul>
<p><strong>说明</strong></p>
<blockquote>
<ul>
<li>系统生成和手动编辑可能产生重叠，系统生成的编辑可能会删除注释或者其他帮助理解域、域类型的关键性的自定义内容。你可能希望通过源码控制标记（配置）文件的版本，或者同时限制手动编辑。<br>Solrconfig.xml允许Solr schema被定义为“被管理的索引模式”：只能通过Schema API修改schema。</li>
<li>managed-schema是solr开始才有的schema配置文件，它是用来避免API方式配置schema和手动修改schema配置文件之间的冲突（比如说重复字段名），因此这个文件不建议手动修改</li>
<li>可以把managed-schema复制一份schema.xml，然后在这个文件手动配置schema</li>
<li>这两个schema配置文件solr系统如何识别呢？答案是两个配置是不能同时生效的，系统默认使用managed-schema，支持REST API方式动态配置schema，适合有动态配置schema、field、fieldType之类需求的就使用这个配置，什么都不改即可。</li>
<li>若项目没有动态修改schema的需求，那可以使用schema.xml进行配置，在其中可以很方便根据schema配置语法进行个性化自定义，方便编码，若要schema.xml生效，需要按照如下步骤修改db/conf/solrconfig.xml的配置：</li>
</ul>
</blockquote>
<ol>
<li><p>找到如下配置(6.5.1其实默认没有这个配置，自己直接添加就行)：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">schemaFactory</span> <span class="attr">class</span>=<span class="string">"ManagedIndexSchemaFactory"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bool</span> <span class="attr">name</span>=<span class="string">"mutable"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">bool</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">str</span> <span class="attr">name</span>=<span class="string">"managedSchemaResourceName"</span>&gt;</span>managed-schema<span class="tag">&lt;/<span class="name">str</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">schemaFactory</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>替换成：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">schemaFactory</span> <span class="attr">class</span>=<span class="string">"ClassicIndexSchemaFactory"</span>/&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="Schema手动配置Field和FieldType"><a href="#Schema手动配置Field和FieldType" class="headerlink" title="Schema手动配置Field和FieldType"></a>Schema手动配置Field和FieldType</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 配置一个新field，设定类型 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"text_smart"</span> <span class="attr">type</span>=<span class="string">"text_smart"</span> <span class="attr">indexed</span>=<span class="string">"true"</span> <span class="attr">stored</span>=<span class="string">"true"</span> <span class="attr">multiValued</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line"><span class="comment">&lt;!-- 配置一个新的类型，指定分词器 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">"text_smart"</span> <span class="attr">class</span>=<span class="string">"solr.TextField"</span> <span class="attr">positionIncrementGap</span>=<span class="string">"0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">"index"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">"org.apache.lucene.analysis.cn.smart.HMMChineseTokenizerFactory"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">"query"</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">"org.apache.lucene.analysis.cn.smart.HMMChineseTokenizerFactory"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"title"</span> <span class="attr">type</span>=<span class="string">"text_smart"</span> <span class="attr">indexed</span>=<span class="string">"true"</span> <span class="attr">stored</span>=<span class="string">"true"</span> <span class="attr">multiValued</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"text_all"</span> <span class="attr">type</span>=<span class="string">"text_smart"</span> <span class="attr">indexed</span>=<span class="string">"true"</span> <span class="attr">stored</span>=<span class="string">"false"</span> <span class="attr">multiValued</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"filename"</span> <span class="attr">type</span>=<span class="string">"text_smart"</span> <span class="attr">indexed</span>=<span class="string">"true"</span> <span class="attr">stored</span>=<span class="string">"true"</span> <span class="attr">multiValued</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"filecontent"</span> <span class="attr">type</span>=<span class="string">"text_smart"</span> <span class="attr">indexed</span>=<span class="string">"true"</span> <span class="attr">stored</span>=<span class="string">"false"</span> <span class="attr">multiValued</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line"><span class="comment">&lt;!-- 为多个field指定一个共同的别名，通过这个别名进行query就能够同时对所有field进行搜索 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">copyField</span> <span class="attr">source</span>=<span class="string">"title"</span> <span class="attr">dest</span>=<span class="string">"text_all"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">copyField</span> <span class="attr">source</span>=<span class="string">"text_smart"</span> <span class="attr">dest</span>=<span class="string">"text_all"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">copyField</span> <span class="attr">source</span>=<span class="string">"filename"</span> <span class="attr">dest</span>=<span class="string">"text_all"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">copyField</span> <span class="attr">source</span>=<span class="string">"filecontent"</span> <span class="attr">dest</span>=<span class="string">"text_all"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">copyField</span> <span class="attr">source</span>=<span class="string">"id"</span> <span class="attr">dest</span>=<span class="string">"text_all"</span>/&gt;</span></div></pre></td></tr></table></figure>
<h5 id="启动solr"><a href="#启动solr" class="headerlink" title="启动solr"></a>启动solr</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bin/solr start</div></pre></td></tr></table></figure>
<p>启动如下：<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-start.png" alt="image"><br>浏览器访问<a href="http://localhost:8983/" target="_blank" rel="external">http://localhost:8983/</a>，如下：<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-admin.png" alt="image"></p>
<h5 id="关闭solr"><a href="#关闭solr" class="headerlink" title="关闭solr"></a>关闭solr</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bin/solr stop</div></pre></td></tr></table></figure>
<p>关闭如下：<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-stop.png" alt="image"></p>
<h2 id="集群部署"><a href="#集群部署" class="headerlink" title="集群部署"></a>集群部署</h2><h5 id="Solr集群架构图"><a href="#Solr集群架构图" class="headerlink" title="Solr集群架构图"></a>Solr集群架构图</h5><p><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-cloud-struct.png" alt="image"></p>
<ul>
<li>图的上半部分是物理结构，一看就清楚，需要关注的是每个机器节点都可以有多个core，这个和下面的逻辑结构有比较大的联系。</li>
<li>下半部分逻辑结构：一个Collection就是一个完整的索引集，可以理解为一个索引文件，Shard1和Shard2就是该索引集的多个分片，就是说把完整的一个索引文件分成了多个，类似数据库分库分表，不过你在访问的时候只需要访问Collection即可，内部分片和索引所在的分片位置不需要关心，这样对不同个分片的访问就可以分流到不同机器上就行处理，也避免了单个索引文件无限膨胀的可能。</li>
<li>再往上就是副本，每个Shard都可以有多个副本，类比数据库读写分离，写操作由Master节点接收，并自动同步到Slave节点，当一个Master节点宕机，就会自动选举一个Slave节点重新承担Master的功能，这里的每个副本就如图所示，对应每个Solr节点的一个Core，这样逻辑和物理之间的联系就建立起来了。</li>
</ul>
<h5 id="高可用"><a href="#高可用" class="headerlink" title="高可用"></a>高可用</h5><ul>
<li>SolrCloud集群由ZooKeeper进行协调，集群中所有节点使用ZooKeeper中共有的配置文件，这样就能保证各个节点之间的配置统一。</li>
<li>SolrCloud节点宕机、Master选举等都通过ZooKeeper的分布式协调实现，所以说SolrJ的访问地址也是ZooKeeper的地址。</li>
</ul>
<h5 id="SolrCloud集群部署"><a href="#SolrCloud集群部署" class="headerlink" title="SolrCloud集群部署"></a>SolrCloud集群部署</h5><pre><code>这里比较重要了，由于Solr的版本间兼容性较差，又因为我这是当前最新版，因此在集群部署过程中遇到很多坑，主要是查的资料各种版本都有，还分成tomcat和jetty两种部署方式，搞得我在试验各种方案的过程中浪费了很多时间，好在最后让我找到了一个比较可靠的博客，很详细地用最简单的jetty方式部署，其实从各方面性能看，jetty不比tomcat差，而且现在都流行直接nginx反向代理和负载均衡以及微服务，我反而更喜欢jetty了。。。
</code></pre><blockquote>
<ul>
<li>先贴教程:<a href="http://www.zhangrenhua.com/2016/06/17/Solr6.0.1%E6%A6%82%E5%BF%B5%E5%92%8C%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/" target="_blank" rel="external">Solr6.0.1概念和集群部署</a></li>
</ul>
</blockquote>
<ol>
<li>ZooKeeper集群部署，这在我之前的博客有，需要的自行查看，我就直接那部署好的ZooKeeper来用而已：<a href="http://www.jianshu.com/p/5e012efb2d82" target="_blank" rel="external">ZooKeeper配置和学习笔记</a></li>
<li>官网下载solr-6.5.1.tgz，解压并到该目录下</li>
<li>上传配置文件到ZooKeeper（之后整个集群所有机器就是共用这套配置文件了）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./bin/solr zk -z localhost:2181/solr -upconfig -n solr <span class="_">-d</span> example/example-DIH/solr/solr</div></pre></td></tr></table></figure>
</li>
</ol>
<p>参数说明：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-upconfig      表示把你的配置文件上传到ZooKeeper集群</div><div class="line">-n configName  指定这个配置的名称，solr管理页面会用到</div><div class="line"><span class="_">-d</span> confdir     要上传的配置文件在本地的地址，默认使用解压的example/example-DIH/solr/solr即可，若有配置需求的，可实现修改相应的配置，再上传到ZooKeeper（配置方法同上面的单节点模式）</div><div class="line">-z zkHost      Zookeeper集群地址</div></pre></td></tr></table></figure></p>
<ol>
<li>把刚才解压的整个solr-6.5.1目录额外复制两份（伪分布式，你若有多台机器可考虑真实分布式部署）</li>
<li>启动solr节点服务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./bin/solr start -c -m 1g -z localhost:2181/solr -p 8983</div></pre></td></tr></table></figure>
</li>
</ol>
<p>参数说明：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-c：cloud模式启动</div><div class="line">-m：最大内存使用</div><div class="line">-z：zookeeper集群地址</div><div class="line">-p：启动服务端口</div></pre></td></tr></table></figure></p>
<ol>
<li><p>相同方式启动另外两个节点：（端口号错开）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">solr-2/bin/solr start -c -m 1g -z localhost:2181/solr -p 8984</div><div class="line">solr-2/bin/solr start -c -m 1g -z localhost:2181/solr -p 8985</div></pre></td></tr></table></figure>
</li>
<li><p>浏览器访问：<a href="http://localhost:8983/solr/#/" target="_blank" rel="external">http://localhost:8983/solr/#/</a></p>
</li>
<li><p>如图创建Collection：<img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr6.0.1-collections-addCollection.png" alt="image"></p>
<blockquote>
<ul>
<li>配置参数说明：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">name： 待创建Collection的名称</div><div class="line">config <span class="built_in">set</span>： collection在zookeeper中的配置目录</div><div class="line">numShards： 分片的数量</div><div class="line">replicationFactor： 复制副本的数量</div><div class="line">maxShardsPerNode：默认值为1，注意三个数值：numShards、replicationFactor、liveSolrNode，一个正常的solrCloud集群不容许同一个liveSolrNode上部署同一个shard的多个replic，因此当maxShardsPerNode=1时，numShards*replicationFactor&gt;liveSolrNode时，报错。因此正确时因满足以下条件：</div><div class="line">numShards*replicationFactor&lt;liveSolrNode*maxShardsPerNode</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
</li>
<li><p>查看各个节点和分片的关系图：<img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-6.5.1-collection-graph.png" alt="image"></p>
<blockquote>
<ul>
<li>至此，SolrCloud集群部署完成。</li>
<li>可以看到solr2这个Collection有shard1、shard2、shard3三个分片，每个分片有两个副本，一个Master、一个Slave，黑点为当前处于Master的副本节点。</li>
<li>这时候我们随便打开一个solr节点的目录server/solr，如下：<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-6.5.1-node-date.png" alt="image"></li>
<li>可知，刚才管理界面创建的Collection节点的分片以core的形式存在于每个节点的core列表目录下，进入其中一个文件夹查看：<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-6.5.1-node-date-dir.png" alt="image"></li>
<li>只有core.properties和data，上面的单节点模式每个core目录下还有lib和conf的，但是这里没有，下面图示说明：<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/Solr-Cloud-Core.png" alt="image"></li>
</ul>
</blockquote>
</li>
</ol>
<h2 id="客户端访问操作"><a href="#客户端访问操作" class="headerlink" title="客户端访问操作"></a>客户端访问操作</h2><h5 id="单节点访问"><a href="#单节点访问" class="headerlink" title="单节点访问"></a>单节点访问</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Solrj客户端工具类，实现对Solr服务的创建索引和查找操作</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> linyuqiang 2017/05/10</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SolrClient</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Solr本地地址</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> String url = <span class="string">"http://localhost:8983/solr/db"</span>;</div><div class="line">    <span class="comment">//查询字符串key</span></div><div class="line">    <span class="keyword">private</span> String searchKey = <span class="string">"text_all"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> highlighting = <span class="keyword">true</span>;</div><div class="line">    <span class="keyword">private</span> String highlightingPre = <span class="string">"&lt;em&gt;"</span>;</div><div class="line">    <span class="keyword">private</span> String highlightingPost = <span class="string">"&lt;/em&gt;"</span>;</div><div class="line">    <span class="keyword">private</span> String highlightingField = <span class="string">"content"</span>;</div><div class="line">    <span class="comment">// Solr客户端对象</span></div><div class="line">    <span class="keyword">private</span> HttpSolrClient client;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> SolrClient <span class="title">open</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 1.创建SolrServer对象，以下这两个是线程安全的SolrServer实现类</span></div><div class="line">        <span class="comment">// CommonsHttpSolrServer 基于Http协议进行C/S数据交互</span></div><div class="line">        <span class="comment">// EmbeddedSolrServer</span></div><div class="line">        <span class="comment">// 内嵌式，只要设定好solr的home目录即可实现和solr的交互，不需要开启solr的服务器，本地交互</span></div><div class="line">        client = <span class="keyword">new</span> HttpSolrClient(url);</div><div class="line">        client.setSoTimeout(<span class="number">10000</span>); <span class="comment">// socket read timeout</span></div><div class="line">        client.setConnectionTimeout(<span class="number">1000</span>);</div><div class="line">        client.setDefaultMaxConnectionsPerHost(<span class="number">100</span>);</div><div class="line">        client.setMaxTotalConnections(<span class="number">100</span>);</div><div class="line">        client.setFollowRedirects(<span class="keyword">false</span>); <span class="comment">// defaults to false</span></div><div class="line">        <span class="comment">// allowCompression defaults to false.</span></div><div class="line">        <span class="comment">// Server side must support gzip or deflate for this to have any effect.</span></div><div class="line">        client.setAllowCompression(<span class="keyword">true</span>);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 查找,分页查询</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> qString 查找字符串</div><div class="line">     * <span class="doctag">@return</span> 返回查询结果列表</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;SolrjMessage&gt; <span class="title">search</span><span class="params">(String qString, Integer pageNum, Integer pageSiez)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            SolrQuery query = <span class="keyword">new</span> SolrQuery(searchKey + <span class="string">":"</span> + qString);<span class="comment">// 查询字符串</span></div><div class="line">            query.setStart((pageNum - <span class="number">1</span>) * pageSiez);<span class="comment">// 设置查询开始下标</span></div><div class="line">            query.setRows(pageSiez);<span class="comment">// 查询行数</span></div><div class="line"></div><div class="line">            <span class="comment">//高亮配置</span></div><div class="line">            query.setHighlight(highlighting);</div><div class="line">            query.setHighlightSimplePre(highlightingPre);</div><div class="line">            query.setHighlightSimplePost(highlightingPost);</div><div class="line">            query.addHighlightField(highlightingField);</div><div class="line"></div><div class="line">            QueryResponse response = client.query(query);<span class="comment">// 获取查询返回对象</span></div><div class="line"></div><div class="line">            SolrDocumentList docs = response.getResults();<span class="comment">// 获取查询得到的所有Document</span></div><div class="line">            <span class="comment">//查询高亮信息</span></div><div class="line">            Map&lt;String, Map&lt;String, List&lt;String&gt;&gt;&gt; highlightings = response.getHighlighting();</div><div class="line">            List&lt;SolrjMessage&gt; list = <span class="keyword">new</span> ArrayList&lt;SolrjMessage&gt;();</div><div class="line">            <span class="keyword">for</span> (SolrDocument doc : docs) &#123;</div><div class="line">                <span class="comment">// 获取每个Document的详细信息</span></div><div class="line">                SolrjMessage message = <span class="keyword">new</span> SolrjMessage();</div><div class="line">                message.setId((String) doc.getFieldValue(<span class="string">"id"</span>));</div><div class="line">                message.setUrl((String) doc.getFieldValue(<span class="string">"url"</span>));</div><div class="line"></div><div class="line">                <span class="comment">//高亮信息</span></div><div class="line">                List&lt;String&gt; hights = highlightings.get(message.getId() + <span class="string">""</span>).get(highlightingField);</div><div class="line">                StringBuilder highlighting = <span class="keyword">new</span> StringBuilder();</div><div class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; hights.size(); i++) &#123;</div><div class="line">                    highlighting.append(hights.get(i)).append(<span class="string">" "</span>);</div><div class="line">                &#125;</div><div class="line">                message.setHighlighting(highlighting.toString());</div><div class="line"></div><div class="line">                list.add(message);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="comment">//其他查询信息</span></div><div class="line">            NamedList responseHeader = response.getResponseHeader();</div><div class="line">            SimpleOrderedMap params = (SimpleOrderedMap) responseHeader.get(<span class="string">"params"</span>);</div><div class="line">            NamedList&lt;Object&gt; responseResponse = response.getResponse();</div><div class="line">            SolrDocumentList responseBean = (SolrDocumentList) responseResponse.get(<span class="string">"response"</span>);</div><div class="line"></div><div class="line">            <span class="keyword">int</span> qTime = response.getQTime();</div><div class="line">            <span class="keyword">int</span> status = response.getStatus();</div><div class="line">            Object q = params.get(<span class="string">"q"</span>);</div><div class="line">            Object fq = params.get(<span class="string">"fq"</span>);</div><div class="line">            Object numFound = responseBean.getNumFound();</div><div class="line">            Object start = responseBean.getStart();</div><div class="line">            <span class="keyword">return</span> list;</div><div class="line">        &#125; <span class="keyword">catch</span> (SolrServerException e) &#123;</div><div class="line">            logger.error(<span class="string">"solr服务异常"</span>, e);</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"solr服务异常"</span>, e);</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            logger.error(<span class="string">"solr服务IO异常"</span>, e);</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"solr服务IO异常"</span>, e);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Solr创建索引</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> message 创建索引的文件</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> SolrClient <span class="title">createIndex</span><span class="params">(SolrjMessage message)</span> </span>&#123;</div><div class="line">        SolrInputDocument doc = <span class="keyword">new</span> SolrInputDocument();</div><div class="line">        doc.addField(<span class="string">"id"</span>, message.getId());</div><div class="line">        doc.addField(<span class="string">"url"</span>, message.getUrl());</div><div class="line">        doc.addField(<span class="string">"content"</span>, message.getContent());</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            client.add(doc);</div><div class="line">            client.commit();</div><div class="line">        &#125; <span class="keyword">catch</span> (SolrServerException e) &#123;</div><div class="line">            logger.error(<span class="string">"solr服务异常"</span>, e);</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"solr服务异常"</span>, e);</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            logger.error(<span class="string">"solr服务IO异常"</span>, e);</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"solr服务IO异常"</span>, e);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteIndex</span><span class="params">()</span> <span class="keyword">throws</span> IOException, SolrServerException </span>&#123;</div><div class="line">        UpdateResponse response = client.deleteByQuery(<span class="string">"docName:testCatcher"</span>);</div><div class="line">        client.commit();</div><div class="line">        <span class="keyword">int</span> status = response.getStatus();</div><div class="line">        System.out.println(<span class="string">"status = "</span> + status);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="集群访问"><a href="#集群访问" class="headerlink" title="集群访问"></a>集群访问</h5><ul>
<li>client对象的初始化方式改变，其他创建索引、删除索引、搜索的代码都和单节点一样。<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">    * ZooKeeper地址</div><div class="line">    */</div><div class="line">   <span class="keyword">private</span> String zookeeperUrl = <span class="string">"&#123;zookeeperHost&#125;:2181/solr"</span>;</div><div class="line">   <span class="comment">//查询字符串key</span></div><div class="line">   <span class="keyword">private</span> String searchKey = <span class="string">"name"</span>;</div><div class="line">   <span class="keyword">private</span> <span class="keyword">boolean</span> highlighting = <span class="keyword">true</span>;</div><div class="line">   <span class="keyword">private</span> String highlightingPre = <span class="string">"&lt;em&gt;"</span>;</div><div class="line">   <span class="keyword">private</span> String highlightingPost = <span class="string">"&lt;/em&gt;"</span>;</div><div class="line">   <span class="keyword">private</span> String highlightingField = <span class="string">"content"</span>;</div><div class="line">   <span class="comment">// Solr客户端对象</span></div><div class="line">   <span class="keyword">private</span> CloudSolrClient client;</div><div class="line"></div><div class="line">   <span class="function"><span class="keyword">public</span> CloudSolrClient1 <span class="title">open</span><span class="params">()</span> </span>&#123;</div><div class="line">       <span class="comment">// 1.创建SolrServer对象，以下这两个是线程安全的SolrServer实现类</span></div><div class="line">       <span class="comment">// CommonsHttpSolrServer 基于Http协议进行C/S数据交互</span></div><div class="line">       <span class="comment">// EmbeddedSolrServer</span></div><div class="line">       <span class="comment">// 内嵌式，只要设定好solr的home目录即可实现和solr的交互，不需要开启solr的服务器，本地交互</span></div><div class="line">       client = <span class="keyword">new</span> CloudSolrClient(zookeeperUrl);</div><div class="line">       client.setSoTimeout(<span class="number">10000</span>); <span class="comment">// socket read timeout</span></div><div class="line">       <span class="comment">//指定Collection名称</span></div><div class="line">       client.setDefaultCollection(<span class="string">"solr"</span>);</div><div class="line">       client.setZkClientTimeout(<span class="number">30000</span>);</div><div class="line">       client.setZkConnectTimeout(<span class="number">30000</span>);</div><div class="line">       client.setSoTimeout(<span class="number">30000</span>);</div><div class="line">       <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="管理界面使用说明"><a href="#管理界面使用说明" class="headerlink" title="管理界面使用说明"></a>管理界面使用说明</h2><ul>
<li><p>Collection管理界面，可以添加、删除、查看、别名Collection<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/Collection-manager.png" alt="Collection-manager.png"></p>
</li>
<li><p>选中其中一个Collection可以进行操作的菜单栏<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-6.5.1-overview.png" alt="solr-6.5.1-overview.png"></p>
</li>
<li><p>分词器测试页面，可以对自己配置的分词器手动输入字符串进行分词结果测试<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-6.5.1-analysis.png" alt="solr-6.5.1-analysis.png"></p>
</li>
<li><p>手动输入document的测试页面，使用不多<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-6.5.1-document.png" alt="solr-6.5.1-document.png"></p>
</li>
<li><p>查看当前Collection的配置文件列表，使用不多<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-6.5.1-files.png" alt="solr-6.5.1-files.png"></p>
</li>
<li><p>搜索查询测试页面，支持分页、排序、高亮、过滤等查询参数的配置，执行按钮点击之后可以在右边页面查看查询的结果信息<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-6.5.1-query.png" alt="solr-6.5.1-query.png"></p>
</li>
<li><p>Schema管理页面，可以增加、删除、查看三种类型的Field<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-6.5.1-schema.png" alt="solr-6.5.1-schema.png"></p>
</li>
<li><p>选中其中一个Core可以进行操作的菜单栏<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-6.5.1-core.png" alt="solr-6.5.1-core.png"></p>
</li>
</ul>
<h2 id="数据库索引同步"><a href="#数据库索引同步" class="headerlink" title="数据库索引同步"></a>数据库索引同步</h2><ol>
<li>solrconfig.xml配置数据导入加载类：<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">requestHandler</span> <span class="attr">name</span>=<span class="string">"/dataimport"</span> <span class="attr">class</span>=<span class="string">"org.apache.solr.handler.dataimport.DataImportHandler"</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;<span class="name">lst</span> <span class="attr">name</span>=<span class="string">"defaults"</span>&gt;</span></div><div class="line">      		<span class="tag">&lt;<span class="name">str</span> <span class="attr">name</span>=<span class="string">"config"</span>&gt;</span>solr-data-config.xml<span class="tag">&lt;/<span class="name">str</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;/<span class="name">lst</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">requestHandler</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<ul>
<li>要放在<code>&lt;requestHandler name=&quot;/select&quot; class=&quot;solr.SearchHandler&quot;&gt;</code>之前</li>
</ul>
<ol>
<li>相同目录下创建solr-data-config.xml配置数据库连接信息：<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dataConfig</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">name</span>=<span class="string">"source1"</span> <span class="attr">type</span>=<span class="string">"JdbcDataSource"</span> <span class="attr">driver</span>=<span class="string">"com.mysql.jdbc.Driver"</span> <span class="attr">url</span>=<span class="string">"jdbc:mysql://localhost:3306/doc_searcher"</span> <span class="attr">user</span>=<span class="string">"root"</span> <span class="attr">password</span>=<span class="string">""</span> <span class="attr">batchSize</span>=<span class="string">"-1"</span> /&gt;</span>  </div><div class="line">　　<span class="tag">&lt;<span class="name">document</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">entity</span> <span class="attr">name</span>=<span class="string">"test"</span> <span class="attr">pk</span>=<span class="string">"id"</span>  <span class="attr">dataSource</span>=<span class="string">"source1"</span>   </span></div><div class="line">                <span class="attr">query</span>=<span class="string">"select * from  test"</span>  </div><div class="line">                 <span class="attr">deltaImportQuery</span>=<span class="string">"select * from test where id='$&#123;dih.delta.id&#125;'"</span>  </div><div class="line">                <span class="attr">deltaQuery</span>=<span class="string">"select id from test where create_time &amp;gt; '$&#123;dataimporter.last_index_time&#125;'"</span>&gt;  </div><div class="line">　　　       <span class="tag">&lt;<span class="name">field</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">name</span>=<span class="string">"id"</span>/&gt;</span>  </div><div class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span>/&gt;</span>  </div><div class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">column</span>=<span class="string">"create_time"</span> <span class="attr">name</span>=<span class="string">"createTime"</span>/&gt;</span>  </div><div class="line">　　　  <span class="tag">&lt;/<span class="name">entity</span>&gt;</span>  </div><div class="line">　　<span class="tag">&lt;/<span class="name">document</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dataConfig</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li>很简单，照抄小改就行，用jdbc四要素进行连接，delta相关参数是增量导入用的，solr内部维护好上次导入的id和时间戳，这次增量导入就根据内部维护的时间戳进行对比，把变化的部分重新导入到solr。</li>
<li>需要注意的是<field>标签的name属性要在solr的该core的schema进行相应的配置，保证这些field是存在的才能正常运行。</field></li>
</ul>
<ol>
<li><code>server/solr-webapp/webapp/WEB-INF/lib</code>放入mysql的jdbc驱动包</li>
<li>清空该Core中的所有数据，或者新建一个全新的Core</li>
<li>到solr管理页面导入数据即可：<br><img src="/2016-12-05/Solr6.5.1集群部署和后台管理/solr-6.5.1-dataimport.png" alt="solr-6.5.1-dataimport.png"></li>
</ol>
</blockquote>
<h5 id="其他用到的命令"><a href="#其他用到的命令" class="headerlink" title="其他用到的命令"></a>其他用到的命令</h5><ul>
<li><p>本地配置同步到ZooKeeper：（一个个文件同步）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./server/scripts/cloud-scripts/zkcli.sh -zkhost localhost:2181 -cmd putfile /solr/configs/solr/solrconfig.xml  example/example-DIH/solr/solr/conf/solrconfig.xml</div></pre></td></tr></table></figure>
</li>
<li><p>重新加载solr集群的节点配置：（同步ZooKeeper之后免重启集群，重新加载配置信息）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:8983/solr/admin/collections?action=RELOAD&amp;name=solr</div></pre></td></tr></table></figure>
</li>
<li><p>从数据源导入数据到Solr</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:8983/solr/solr2/dataimport?<span class="built_in">command</span>=full-import&amp;commit=ture</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><ul>
<li><a href="http://www.cnblogs.com/Lxiaojiang/p/6297281.html" target="_blank" rel="external">Solr6 Schema.xml配置</a></li>
<li><a href="https://my.oschina.net/infowangxin/blog/898335" target="_blank" rel="external">Solr6.5 集群搭建、数据库数据导入solr、分词器配置</a></li>
<li><a href="http://www.zhangrenhua.com/2016/06/17/Solr6.0.1%E6%A6%82%E5%BF%B5%E5%92%8C%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/" target="_blank" rel="external">Solr6.0.1概念和集群部署</a></li>
<li><a href="http://www.zhangrenhua.com/2016/06/18/Solr6%20as%20JDBC%20Data%20Source/" target="_blank" rel="external">Solr6 as JDBC Data Source</a></li>
<li><a href="https://cwiki.apache.org/confluence/display/solr/Configuration+APIs" target="_blank" rel="external">一些Solr的RESTful API</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 个人心得 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 搜索引擎 </tag>
            
            <tag> java </tag>
            
            <tag> solr </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[校招之路]]></title>
      <url>/2016-12-05/%E6%A0%A1%E6%8B%9B%E4%B9%8B%E8%B7%AF/</url>
      <content type="html"><![CDATA[<h1 id="行程经历："><a href="#行程经历：" class="headerlink" title="行程经历："></a>行程经历：</h1><blockquote>
<ul>
<li>华为实习生性格测试——一面——二面——面试通过（备胎）——no result</li>
<li>华为校招提前批一面——二面——三面主管谈心——offer</li>
<li>阿里内推电话一面挂</li>
<li>网易笔试——一面——二面——HR面，挂</li>
<li>微店内推电话一面——视频二面——HR面——Offer</li>
<li>百度内推一面——二面挂（C++岗位。。。）</li>
<li>58笔试——一面——二面——HR面——未知</li>
<li>360笔试——一面——二面——HR面——未知（大数据岗位）</li>
<li>小米笔试——一面——二面——三面——未知</li>
<li><p>之后又有四五个公司笔试过了，都拒了。</p>
</li>
<li><h3 id="在没得到允许的情况下，出于对各个公司的校招团队的尊重，我这里不专门贴题目，而且每个人遇到的题目也不见得一样，很多都是在当时的特定情况下面试官跟着你的表述追问的。"><a href="#在没得到允许的情况下，出于对各个公司的校招团队的尊重，我这里不专门贴题目，而且每个人遇到的题目也不见得一样，很多都是在当时的特定情况下面试官跟着你的表述追问的。" class="headerlink" title="在没得到允许的情况下，出于对各个公司的校招团队的尊重，我这里不专门贴题目，而且每个人遇到的题目也不见得一样，很多都是在当时的特定情况下面试官跟着你的表述追问的。"></a>在没得到允许的情况下，出于对各个公司的校招团队的尊重，我这里不专门贴题目，而且每个人遇到的题目也不见得一样，很多都是在当时的特定情况下面试官跟着你的表述追问的。</h3></li>
<li><h3 id="网上面经很多啊，大多都是针对某个公司的，然后列出一面二面三面HR面的问题列表啊，针对的点比较窄，我一向有自己的特点，列题目没意思啊，提取成知识点你自己去学吧，我能保证的是这些如果能好好掌握的话，可以很轻松应对大多数公司，其实你只要能坚持下去，校招拿到若干个offer来选择都不是问题的，好好加油"><a href="#网上面经很多啊，大多都是针对某个公司的，然后列出一面二面三面HR面的问题列表啊，针对的点比较窄，我一向有自己的特点，列题目没意思啊，提取成知识点你自己去学吧，我能保证的是这些如果能好好掌握的话，可以很轻松应对大多数公司，其实你只要能坚持下去，校招拿到若干个offer来选择都不是问题的，好好加油" class="headerlink" title="网上面经很多啊，大多都是针对某个公司的，然后列出一面二面三面HR面的问题列表啊，针对的点比较窄，我一向有自己的特点，列题目没意思啊，提取成知识点你自己去学吧，我能保证的是这些如果能好好掌握的话，可以很轻松应对大多数公司，其实你只要能坚持下去，校招拿到若干个offer来选择都不是问题的，好好加油~"></a>网上面经很多啊，大多都是针对某个公司的，然后列出一面二面三面HR面的问题列表啊，针对的点比较窄，我一向有自己的特点，列题目没意思啊，提取成知识点你自己去学吧，我能保证的是这些如果能好好掌握的话，可以很轻松应对大多数公司，其实你只要能坚持下去，校招拿到若干个offer来选择都不是问题的，好好加油~</h3></li>
</ul>
</blockquote>
<h1 id="感悟："><a href="#感悟：" class="headerlink" title="感悟："></a>感悟：</h1><blockquote>
<ul>
<li><p>谁有我这种心理承受能力。。。特别是前期，全部失败。。。几乎看不到希望的曙光，害的我都在我家找了一家小公司面试兜底。。。</p>
</li>
<li><p>后来想想，不就是笔试嘛，和初高中的考试差不多，开始拿起以前的学习方法准备，狂填简历啊，笔试挂了不要紧啊，记住自己不会的，下次会了就行，反正公司多，怕什么。</p>
</li>
<li><p>笔试面试有机缘性，有时候你遇到的题目和你不是对口的，这就是缘分问题了，面试还能跟面试官说我这方面不擅长，笔试只能认了。</p>
</li>
<li><p>面试的时候自己不会的就说不会啊，不懂装懂等会深入问你懵逼。</p>
</li>
<li><p>笔试面试其实是有一些常用题库的，因为公司也没那么多时间专门创造题，所以多刷刷题是有用的，最多会有些简单变体，但是本质不变。</p>
</li>
<li><p>每次的笔试面试过后，一定要及时总结自己的缺漏，把自己不擅长的补上，因为你下次遇到相同的题的几率很大。</p>
</li>
<li><p>笔试面试真的是一个很好的成长过程，我在这个过程中查缺补漏，把很多以前不注重的编程细节弄懂弄清楚，解答了很多以前不懂的疑问。从我四月份腾讯阿里实习生开始，就开始了我的查缺补漏的过程。因为那时的我以为自己差不多都会，没什么问题，但是给我的教训就是：自己的知识面和公司的笔试面试的知识面有可能不重合，这个时候意味着你会有很多东西就不会，所以就要有方向性地把一些重点知识点完全掌握，完全理清思路，比如所有的数据结构、计算机网络特别是TCP和HTTP、数据库事务和SQL、操作系统内存和进线程，可能你原来就都懂，但是你能在面试官面前有可能神经紧张的情况下完好地表达出来吗?提前做好准备吧，这样才能稳。</p>
</li>
<li><p>找工作是一个双向选择的过程，有可能你在某个公司表现很好拿到offer，但是在另一个公司就不是对口的，当然提前调查好公司的技术栈可以减少失败，像我这种海投作死方式纯粹是安全感不足导致，完全没必要这么做。</p>
</li>
<li><p>别把事情留到明天，有任何疑问第一时间马上解决，我的网易堆排序，百度快排，阿里红黑树，以及很多笔试都是拖延症导致的，而且这些东西我本来就预感会遇到，但是因为之前一直没遇到就怀着侥幸心理，拖延啊。。。自扇10巴掌。</p>
</li>
<li><p>在你有实力的情况下，还有一个很重要的东西：你要确保能在面试官面前（有些面试官会很冷淡给你施加压力），在各种极端条件下表现出最好的自己，因为就算你再优秀，在面试官面前没表现出来他也不知道啊。</p>
</li>
</ul>
</blockquote>
<h1 id="必会知识点："><a href="#必会知识点：" class="headerlink" title="必会知识点："></a>必会知识点：</h1><blockquote>
<ul>
<li>数据结构全部，别偷懒，红黑树了解</li>
<li>计算机网络：TCP和HTTP，TCP水很深（58就被问的招架不住）</li>
<li>数据库原理：范式、事务和隔离级别、SQL各种、SQL优化(mysql)</li>
<li>算法：快排、堆排序、归并排序等八大排序，回溯法，动态规划，分支限界，递归，分治，数组，链表，二叉树，字符串，栈，队列</li>
<li>操作系统：内存管理，进线程并发同步，IO等</li>
<li>Java：基础知识、反射、内省、动态代理、NIO、类加载器——原理和用处</li>
<li>常用API：手写代码用</li>
<li>Spring要会，Ioc和AOP，水很深，看源码</li>
<li>ORM：Mybatis源码够了，Hibernate再涉及点复杂的关系映射，entity的状态转换</li>
<li>JVM：Java内存模型、GC算法、class文件格式了解、Java锁、volatile、高并发优化</li>
<li>JDK源码：容器、并发包、常用类</li>
<li>linux常用命令(这东西看运气)</li>
<li>高并发：Java并发包、CAS原则、ConcurrentHashMap、CopyOnWriteArrayList、乐观锁、自旋锁、非阻塞编程等</li>
<li>Hadoop系列：主要用来学习体会分布式和高可用的思想</li>
<li>分布式和高可用架构：mysql读写分离和分库分表、动静分离、请求分流、前端缓存、后端缓存、分布式事务、负载均衡、如何实现高可用等等</li>
<li>redis、memcache、mongodb等NoSQL</li>
<li>超大规模数据量的一些算法设计：无非是Hash、分块、汇总、可以分布式设计、并行计算、集群运算、详见MapReduce思想，别怕，就是考考分布式的思路和任务划分，网上有题库</li>
</ul>
<p>再一些你自己技能相关的东西吧</p>
</blockquote>
<h1 id="简历"><a href="#简历" class="headerlink" title="简历"></a>简历</h1><blockquote>
<ul>
<li>STAR法则</li>
<li>####每个公司的简历最好不要都一样，看好对应公司的JD，将自己的简历中和JD关联大的进行排序靠前或者着重强调，无关东西能删则删</li>
<li>GPA要有，专业排名要有，毕业时间</li>
<li>求职意向明确</li>
<li>简要个人信息和详细的联系方式</li>
<li>技能掌握谦虚写</li>
<li>获奖经历真实填写</li>
<li>项目经历、博客、github都能加分</li>
</ul>
</blockquote>
<h1 id="性格测试、素质测评"><a href="#性格测试、素质测评" class="headerlink" title="性格测试、素质测评"></a>性格测试、素质测评</h1><blockquote>
<ul>
<li>前后可能有相同相似题，要前后一致</li>
<li>IQ题看发挥</li>
<li>行测题看发挥</li>
</ul>
</blockquote>
<h1 id="笔试"><a href="#笔试" class="headerlink" title="笔试"></a>笔试</h1><blockquote>
<p>好好准备计算机基础课程知识和数据结构、OJ刷题</p>
</blockquote>
<h1 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h1><blockquote>
<ul>
<li>沉着冷静、不能怂</li>
<li>算法题冷静分析，问好具体情况</li>
<li>表达好，让面试官知道你懂</li>
<li>自己不会的就说不会，让面试官问别的</li>
<li>面试官对于你会的东西都要根据你的描述进行相应的追问，毕竟很多问题网上都有答案，而面试官的即时追问是未知的，从这点可以更好地确认你对该知识点的掌握程度。</li>
</ul>
<p>我遇到的面试官都还好，一看就是技术男，不会在技术以外的地方为难你。</p>
</blockquote>
<h1 id="HR面"><a href="#HR面" class="headerlink" title="HR面"></a>HR面</h1><blockquote>
<ul>
<li>谈人生啊，谈理想啊，谈薪资啊，只要你不是别有用心，这是最轻松的面试。</li>
</ul>
<p>HR都很nice，没机会会会传说中的阿里HR哈哈哈，不知道恐不恐怖 &gt;.&lt;</p>
</blockquote>
<h1 id="书单"><a href="#书单" class="headerlink" title="书单"></a>书单</h1><blockquote>
<ul>
<li>Java并发编程实战</li>
<li>Java编程思想</li>
<li>Effective Java</li>
<li>编程之美</li>
<li>剑指Offer</li>
<li>程序员面试金典</li>
<li>编程珠玑</li>
<li>深入浅出设计模式</li>
<li>Hadoop权威指南</li>
<li>高性能MySQL</li>
<li>深入理解Java虚拟机</li>
<li>大型网站技术架构：核心原理与案例分析</li>
<li>Spring源码深度解析</li>
</ul>
<p>水深的很，尽量看吧</p>
</blockquote>
<h1 id="辅助网站"><a href="#辅助网站" class="headerlink" title="辅助网站"></a>辅助网站</h1><blockquote>
<p><a href="http://www.acmcoder.com/" target="_blank" rel="external">赛码</a><br><a href="http://www.nowcoder.com/" target="_blank" rel="external">牛客网</a><br><a href="http://www.jianshu.com/" target="_blank" rel="external">简书</a><br><a href="http://ifeve.com/" target="_blank" rel="external">并发编程网</a><br><a href="https://segmentfault.com/" target="_blank" rel="external">segmentfault</a><br><a href="http://www.kuqin.com/" target="_blank" rel="external">酷勤网</a><br><a href="http://www.ibm.com/developerworks/cn/topics/" target="_blank" rel="external">IBM技术网站</a></p>
</blockquote>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><blockquote>
<ul>
<li>千万准备充分啊，从我一开始的自以为是，慌张应对，结果结局惨重，到最后及时总结，稳扎稳打，面试时胸有成竹，甚至超常发挥最大的分界点就在于八月中旬网易失利之后到八月末我开始的对之前面试的总结和知识点的系统梳理，可以说那段时间总结出的文档奠定了我九月份开始的大规模校招从容应对的基础，从我360、58和小米的面试感受出来，面对面试题都能从容分析，笔试题也能有信心。</li>
<li>成功找到喜欢的东家，可以好好继续学喜欢的东西了，不用再为了工作到处奔波，随时担心面试电话和邮件了，哈哈哈，全世界又重新轻松起来了~</li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 个人心得 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人心得 </tag>
            
            <tag> 面试 </tag>
            
            <tag> 校招 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2016-12-05/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> Hello </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hello </tag>
            
            <tag> init </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
